<!-- addProduct.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.css" integrity="sha512-bs9fAcCAeaDfA4A+NiShWR886eClUcBtqhipoY5DM60Y1V3BbVQlabthUBal5bq8Z8nnxxiyb1wfGX2n76N1Mw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/assets/css/add.css">
    <style type="text/css">
        img{
            display: block;
            max-width: 100%;

        }
        .preview{
            overflow: hidden;
            width: 160px;
            height: 160px;
            margin: 10px;
            border: 1px solid red;
        }

      
    .alert {
        padding: 15px;
        border: 1px solid #d6e9c6;
        border-radius: 4px;
        color: #3c763d;
        background-color: #dff0d8;
        margin-bottom: 20px;
    }

    .alert-danger {
        color: #a94442;
        background-color: #f2dede;
        border-color: #ebccd1;
    }
    .error-message {
            color: red;
        }



    </style >
</head>
<body>
    <h1>Add a New Product</h1>
    <form id="addProduct" enctype="multipart/form-data" action="/admin/addNewproduct" method="POST"   >
        <label for="productname">Product Name:</label>
        <input type="text" id="productname" name="name" required><br><br>

        <label for="price">Price:</label>
        <input type="text" id="price" name="price" required><br><br>

     

        <label for="details">Details:</label><br>
        <textarea id="details" name="details" rows="4" cols="50"></textarea><br><br>

        <label for="brand">Brand:</label>
        <input type="text" id="brand" name="brand"><br><br>

        <label for="image">Product Image:</label>
        <input type="file" class="image" id="images" name="images" multiple  ><br><br>
        <div id="imageContainer"></div>
        <div id="alert-container"></div>
         <!-- Size input fields -->
         <body>

        
                <!-- Size and quantity inputs -->
                <label for="sizes">Sizes and Quantities:</label><br>
                <div id="sizeInputs">
                    <!-- Initial size and quantity input -->
                   <!-- Size input group for Large -->
    <div class="sizeInput">
    <input type="text" name="sizes[]" value="L" readonly> <!-- Default size is Large -->
    <input type="number" name="quantities[]" placeholder="Quantity">
</div>

<!-- Size input group for Medium -->
<div class="sizeInput">
    <input type="text" name="sizes[]" value="M" readonly> <!-- Default size is Medium -->
    <input type="number" name="quantities[]" placeholder="Quantity">
</div>

<!-- Size input group for XL -->
<div class="sizeInput">
    <input type="text" name="sizes[]" value="XL" readonly> <!-- Default size is XL -->
    <input type="number" name="quantities[]" placeholder="Quantity">
</div>

                </div>
              
                <label >select a category:</label>
        <div>
          <select
            class="form-select"
            id="choices-category-input"
            name="category"
          >
            <% categories.forEach(category => { %>
            <option value="<%=category._id  %>">
              <% if(category.isListed==false){%>
                <%=category. categoryName%>
             <% }%>
                

            
             
            </option>

            <% }); %>
          </select>
          </div>
        <button type="submit">Add Product</button>
       
    </form>
  

<!-- Bootstrap JS and jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
 const form = document.getElementById("addproduct")
  let totalimages = 0;

  function imageupload(event) {

    const files = event.target.files;
    const imagecontainer = document.getElementById("imageContainer");
    const maximum = 5;

    const totalupload = totalimages + files.length;
    if (totalupload > maximum) {
     //   Swal.fire(Oops! Upload only ${maximum} files., "Sorry");
        event.target.value = "";
        return;
    }

    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();
      if (!file.type.startsWith("image/")) {
        console.log("File is not an image.", file.type);
        continue;
      }

      const imgdiv = document.createElement("div");
      imgdiv.classList.add("image-div");

      const img = document.createElement("img");
      img.style.height = "300px";
      img.style.width = "300px";
      img.setAttribute("name", images);
      img.classList.add("uploaded-image");

      const deletebutton = document.createElement("button");
      deletebutton.textContent = "Delete";
      deletebutton.classList.add("btn", "btn-danger", "m-2");

      deletebutton.addEventListener("click", function () {
        totalimages--;
        imgdiv.remove();
      });

      reader.onload = function (event) {
        img.src = event.target.result;

        const cropperdiv = document.createElement("div");
        cropperdiv.classList.add("cropper-container");
        cropperdiv.appendChild(img);

        imgdiv.appendChild(cropperdiv);
        const cropper = new Cropper(img, {
          dragMode: "move",
          aspectRatio: 1,
          autoCropArea: 0.8,
          restore: false,
          guides: false,
          center: false,
          responsive:true,
          highlight: false,
          cropBoxMovable: false,
          cropBoxResizable: false,
          toggleDragModeOnDblclick: false,
        });

        const cropbtn = document.createElement("button");
        cropbtn.classList.add("btn", "btn-primary", "m-2");
        cropbtn.textContent = "Crop";
        cropbtn.addEventListener("click", function (event) {
          event.preventDefault();
          const croppedCanvas = cropper.getCroppedCanvas();

          img.src = croppedCanvas.toDataURL()

          croppedCanvas.toBlob((blob) => {
            const fileName = Date.now();
            const file = new File([blob], `${fileName}.jpg`, { type: 'image/jpeg' });

            if (window.FileList && window.DataTransfer) {
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                const input = document.createElement('input');
                input.type = 'file';
                input.name =` image${i}`;
                input.files = dataTransfer.files;
               form.appendChild(input)
               input.style.display = 'none'
               
            } else {
                console.error('FileList and DataTransfer are not supported in this browser.');
            }
        })
          cropper.destroy();
          cropbtn.remove();
    

        });
      
        imgdiv.appendChild(cropbtn);
        imgdiv.appendChild(deletebutton);
      };

      reader.readAsDataURL(file);

      imagecontainer.appendChild(imgdiv);
    }
    totalimages = totalupload;
  }
  const imageInput = document.getElementById("images");

imageInput.addEventListener("change", imageupload);

document.addEventListener('DOMContentLoaded', function () {
    document.getElementById('addProduct').addEventListener('submit', function (event) {
        const productName = document.getElementById('productname').value.trim();
        const price = document.getElementById('price').value.trim();
        const stock = document.getElementById('stock').value.trim();
        const details = document.getElementById('details').value.trim();
        const brand = document.getElementById('brand').value.trim();
        const images = document.getElementById('images').files;

        // Check if product name contains only letters and spaces
        if (!/^[a-zA-Z\s]+$/.test(productName)) {
            showAlert('Product name must contain only letters and spaces.', 'alert-danger');
            event.preventDefault();
            return;
        }

        // Validate price
        if (isNaN(price) || parseFloat(price) <= 0) {
            showAlert('Price must be a positive number.', 'alert-danger');
            event.preventDefault();
            return;
        }

        // Validate stock
        if (isNaN(stock) || parseInt(stock) < 0) {
            showAlert('Stock must be a non-negative number.', 'alert-danger');
            event.preventDefault();
            return;
        }

        // Ensure at least one image is selected
        if (images.length === 0) {
            showAlert('Please select at least one image.', 'alert-danger');
            event.preventDefault();
            return;
        }

        // Iterate over each image file and validate
        for (let i = 0; i < images.length; i++) {
            const image = images[i];
            if (!image.type.startsWith('image/')) {
                showAlert('Please select valid image files only.', 'alert-danger');
                event.preventDefault();
                return;
            }
            if (image.size === 0 || image.size > 5 * 1024 * 1024) {
                showAlert('Please select image files between 0 bytes and 5 MB.', 'alert-danger');
                event.preventDefault();
                return;
            }
        }

        // If all validations pass, the form will be submitted
    });
});
document.getElementById('addProduct').addEventListener('submit', function (event) {
    const productName = document.getElementById('productname').value.trim();
    const price = document.getElementById('price').value.trim();
    const stock = document.getElementById('stock').value.trim();
    const details = document.getElementById('details').value.trim();
    const brand = document.getElementById('brand').value.trim();
    const images = document.getElementById('images').files;

    // Check if product name contains only letters and spaces
    if (!/^[a-zA-Z\s]+$/.test(productName)) {
        showAlert('Product name must contain only letters and spaces.', 'alert-danger');
        event.preventDefault();
        return;
    }

    // Validate price
    if (isNaN(price) || parseFloat(price) <= 0) {
        showAlert('Price must be a positive number.', 'alert-danger');
        event.preventDefault();
        return;
    }

    // Validate stock
    if (isNaN(stock) || parseInt(stock) < 0) {
        showAlert('Stock must be a non-negative number.', 'alert-danger');
        event.preventDefault();
        return;
    }

    // Ensure at least one image is selected
    if (images.length === 0) {
        showAlert('Please select at least one image.', 'alert-danger');
        event.preventDefault();
        return;
    }
});

function showAlert(message, className) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert ${className}`;
    alertDiv.textContent = message;

    // Find the alert container in the form
    const alertContainer = document.getElementById('alert-container');

    // Clear previous alerts if any
    alertContainer.innerHTML = '';

    // Append the alert to the container
    alertContainer.appendChild(alertDiv);
}


   

</script>
</body>
</html>