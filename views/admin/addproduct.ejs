<!-- addProduct.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.css" integrity="sha512-bs9fAcCAeaDfA4A+NiShWR886eClUcBtqhipoY5DM60Y1V3BbVQlabthUBal5bq8Z8nnxxiyb1wfGX2n76N1Mw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/assets/css/add.css">
    <style type="text/css">
        img{
            display: block;
            max-width: 100%;

        }
        .preview{
            overflow: hidden;
            width: 160px;
            height: 160px;
            margin: 10px;
            border: 1px solid red;
        }

      
    .alert {
        padding: 15px;
        border: 1px solid #d6e9c6;
        border-radius: 4px;
        color: #3c763d;
        background-color: #dff0d8;
        margin-bottom: 20px;
    }

    .alert-danger {
        color: #a94442;
        background-color: #f2dede;
        border-color: #ebccd1;
    }
    .error-message {
            color: red;
        }



    </style >
</head>
<body>
  <h1>Add a New Product</h1>
  <form id="addProduct" enctype="multipart/form-data" action="/admin/addNewproduct" method="POST">
      <label for="productname">Product Name:</label>
      <input type="text" oninput="validateForm()" id="productname" name="name"><br><br>
      <span id="nameError" class="text-danger"></span>
  
      <label for="price">Price:</label>
      <input type="number" id="price" oninput="validateForm()" name="price"><br><br>
      <span id="priceError" class="text-danger"></span>
  
      <label for="details">Details:</label><br>
      <textarea id="details" oninput="validateForm()" name="details" rows="4" cols="50"></textarea><br><br>
      <span id="textError" class="text-danger"></span>
  
      <label for="brand">Brand:</label>
      <input type="text" id="brand" oninput="validateForm()" name="brand"><br><br>
      <span id="brandError" class="text-danger"></span>
  
      <label for="image">Product Image:</label>
      <input type="file" class="image" id="images" name="images" multiple><br><br>
      <div id="imageContainer"></div>
      <div id="alert-container"></div>
      <span id="imageError" class="text-danger"></span>
  
      <label for="sizes">Sizes and Quantities:</label><br>
      <div id="sizeInputs">
          <div class="sizeInput">
              <input type="text" name="sizes[]" value="L" readonly>
              <input type="number" id="quantity1" name="quantities[]" placeholder="Quantity" oninput="validateForm()">
              <span id="quantity1Error" class="text-danger"></span>
          </div>
          <div class="sizeInput">
              <input type="text" name="sizes[]" value="M" readonly>
              <input type="number" id="quantity2" name="quantities[]" placeholder="Quantity" oninput="validateForm()">
              <span id="quantity2Error" class="text-danger"></span>
          </div>
          <div class="sizeInput">
              <input type="text" name="sizes[]" value="XL" readonly>
              <input type="number" id="quantity3" name="quantities[]" placeholder="Quantity" oninput="validateForm()">
              <span id="quantity3Error" class="text-danger"></span>
          </div>
      </div>
  
      <label for="choices-category-input">Select a category:</label>
      <select class="form-select" id="choices-category-input" name="category">
          <% categories.forEach(category => { %>
          <option value="<%=category._id %>">
              <% if (category.isListed == false) { %>
              <%= category.categoryName %>
              <% } %>
          </option>
          <% }); %>
      </select>
  
      <button type="submit">Add Product</button>
  </form>
  
  

<!-- Bootstrap JS and jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
 const form = document.getElementById("addproduct")
  let totalimages = 0;

  function imageupload(event) {

    const files = event.target.files;
    const imagecontainer = document.getElementById("imageContainer");
    const maximum = 5;

    const totalupload = totalimages + files.length;
    if (totalupload > maximum) {
     //   Swal.fire(Oops! Upload only ${maximum} files., "Sorry");
        event.target.value = "";
        return;
    }

    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();
      if (!file.type.startsWith("image/")) {
        console.log("File is not an image.", file.type);
        continue;
      }

      const imgdiv = document.createElement("div");
      imgdiv.classList.add("image-div");

      const img = document.createElement("img");
      img.style.height = "300px";
      img.style.width = "300px";
      img.setAttribute("name", images);
      img.classList.add("uploaded-image");

      const deletebutton = document.createElement("button");
      deletebutton.textContent = "Delete";
      deletebutton.classList.add("btn", "btn-danger", "m-2");

      deletebutton.addEventListener("click", function () {
        totalimages--;
        imgdiv.remove();
      });

      reader.onload = function (event) {
        img.src = event.target.result;

        const cropperdiv = document.createElement("div");
        cropperdiv.classList.add("cropper-container");
        cropperdiv.appendChild(img);

        imgdiv.appendChild(cropperdiv);
        const cropper = new Cropper(img, {
          dragMode: "move",
          aspectRatio: 1,
          autoCropArea: 0.8,
          restore: false,
          guides: false,
          center: false,
          responsive:true,
          highlight: false,
          cropBoxMovable: false,
          cropBoxResizable: false,
          toggleDragModeOnDblclick: false,
        });

        const cropbtn = document.createElement("button");
        cropbtn.classList.add("btn", "btn-primary", "m-2");
        cropbtn.textContent = "Crop";
        cropbtn.addEventListener("click", function (event) {
          event.preventDefault();
          const croppedCanvas = cropper.getCroppedCanvas();

          img.src = croppedCanvas.toDataURL()

          croppedCanvas.toBlob((blob) => {
            const fileName = Date.now();
            const file = new File([blob], `${fileName}.jpg`, { type: 'image/jpeg' });

            if (window.FileList && window.DataTransfer) {
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                const input = document.createElement('input');
                input.type = 'file';
                input.name =` image${i}`;
                input.files = dataTransfer.files;
               form.appendChild(input)
               input.style.display = 'none'
               
            } else {
                console.error('FileList and DataTransfer are not supported in this browser.');
            }
        })
          cropper.destroy();
          cropbtn.remove();
    

        });
      
        imgdiv.appendChild(cropbtn);
        imgdiv.appendChild(deletebutton);
      };

      reader.readAsDataURL(file);

      imagecontainer.appendChild(imgdiv);
    }
    totalimages = totalupload;
  }
  const imageInput = document.getElementById("images");

imageInput.addEventListener("change", imageupload);

function validateForm() {
    let isValid = true;
    
    // Validate Product Name
    const name = document.getElementById("productname");
    const nameError = document.getElementById("nameError");
    const nameInput = name.value.trim();
    if (nameInput === "") {
        nameError.textContent = "Name is required";
        isValid = false;
    } else {
        nameError.textContent = '';
    }
    
    // Validate Price
    const price = document.getElementById("price");
    const priceError = document.getElementById("priceError");
    const priceInput = price.value.trim();
    const priceValue = parseFloat(priceInput);
    if (priceInput === "") {
        priceError.textContent = "Price is required";
        isValid = false;
    } else if (isNaN(priceValue) || priceValue < 0) {
        priceError.textContent = "Price must be a positive number";
        isValid = false;
    } else {
        priceError.textContent = '';
    }
    
    // Validate Details
    const details = document.getElementById("details");
    const detailsError = document.getElementById("textError");
    const detailsInput = details.value.trim();
    if (detailsInput === "") {
        detailsError.textContent = "Details are required";
        isValid = false;
    } else {
        detailsError.textContent = '';
    }
    
    // Validate Brand
    const brand = document.getElementById("brand");
    const brandError = document.getElementById("brandError");
    const brandInput = brand.value.trim();
    if (brandInput === "") {
        brandError.textContent = "Brand name is required";
        isValid = false;
    } else {
        brandError.textContent = '';
    }
    
    // Validate Images
    
    
    // Validate Quantities
    const quantities = document.querySelectorAll('input[name="quantities[]"]');
    quantities.forEach((quantity, index) => {
        const quantityError = document.getElementById(`quantity${index + 1}Error`);
        const quantityInput = quantity.value.trim();
        const quantityValue = parseInt(quantityInput, 10);
        if (quantityInput === "" || isNaN(quantityValue) || quantityValue < 0) {
            quantityError.textContent = `Please enter a valid quantity for size ${quantity.previousElementSibling.value}`;
            isValid = false;
        } else {
            quantityError.textContent = '';
        }
    });
    
    return isValid;
}

document.getElementById("addProduct").addEventListener('submit', (e) => {
    if (!validateForm()) {
        e.preventDefault();
    }
});

document.querySelectorAll('input[name="quantities[]"]').forEach(input => {
    input.addEventListener('input', validateForm);
});


   

</script>
</body>
</html>